syntax = "proto3";
package nitric.document.v1;

import "google/protobuf/struct.proto";

// protoc plugin options for code generation
option go_package = "nitric/v1;v1";
option java_package = "io.nitric.proto.document.v1";
option java_multiple_files = true;
option java_outer_classname = "Documents";
option php_namespace = "Nitric\\Proto\\Document\\V1";
option csharp_namespace = "Nitric.Proto.Document.v1";

// Service for storage and retrieval of simple JSON keyValue
service Document {
  // Get an existing document
  rpc Get (DocumentGetRequest) returns (DocumentGetResponse);

  // Create a new or overwrite an existing document
  rpc Set (DocumentSetRequest) returns (DocumentSetResponse);

  // Delete an existing document
  rpc Delete (DocumentDeleteRequest) returns (DocumentDeleteResponse);
  
  // Query the document collection (pagination support)
  rpc Query (DocumentQueryRequest) returns (DocumentQueryResponse);
  
  // Query All the document collection (streaming support)
  rpc QueryAll (DocumentQueryAllRequest) returns (stream DocumentQueryAllResponse);
}

message Key {
  // The item collection
  string collection = 1;

  // The items unique id
  string id = 2;
}

message DocumentGetRequest {
  // The document root key
  Key key = 1;

  // The optional sub collection key
  Key sub_key = 2;
}

message DocumentGetResponse {
  // The retrieved value
  google.protobuf.Struct value = 1;
}

message DocumentSetRequest {
  // The document root key
  Key key = 1;

  // The optional sub collection key
  Key sub_key = 2;

  // A simple JSON object to store
  google.protobuf.Struct value = 3;
}

message DocumentSetResponse {}

message DocumentDeleteRequest {
  // The document root key
  Key key = 1;

  // The optional sub collection key
  Key sub_key = 2;
}

message DocumentDeleteResponse {}

message Expression {
  // The query operand or attribute
  string operand = 1;

  // The query operator [ = | < | <= | > | >= | startsWith ]
  string operator = 2;

  // The query expression value
  string value = 3;
}

message DocumentQueryRequest {
  // The query root key.collection, and optional parent key.id for subcollection queries
  Key key = 1;

  // The optional sub collection name
  string sub_collection = 2;

  // The query expressions
  repeated Expression expressions = 3;

  // The query fetch limit
  int32 limit = 4;

  // The query paging continuation token
  map<string, string> paging_token = 5;
}

message DocumentQueryResponse {
  // The retrieved values
  repeated google.protobuf.Struct values = 1;

  // The query paging continuation token, when not null further results are available
  map<string, string> paging_token = 2;
}

message DocumentQueryAllRequest {
  // The query root key.collection, and optional parent key.id for sub collection queries
  Key key = 1;

  // The optional query sub collection name
  string sub_collection = 2;

  // The query expressions
  repeated Expression expressions = 3;
}

message DocumentQueryAllResponse {
  // The retrieved values
  repeated google.protobuf.Struct values = 1;
}