syntax = "proto3";
package nitric.kv.v1;

import "google/protobuf/struct.proto";

// protoc plugin options for code generation
option go_package = "nitric/v1;v1";
option java_package = "io.nitric.proto.kv.v1";
option java_multiple_files = true;
option java_outer_classname = "KeyValues";
option php_namespace = "Nitric\\Proto\\KeyValue\\V1";
option csharp_namespace = "Nitric.Proto.KeyValue.v1";

// Service for storage and retrieval of simple JSON keyValue
service KeyValue {
  // Get an existing key
  rpc Get (KeyValueGetRequest) returns (KeyValueGetResponse);

  // Create a new or overwrite and existing key
  rpc Put (KeyValuePutRequest) returns (KeyValuePutResponse);

  // Delete an existing
  rpc Delete (KeyValueDeleteRequest) returns (KeyValueDeleteResponse);
  
  // Query the collection
  rpc Query (KeyValueQueryRequest) returns (KeyValueQueryResponse);
}

// Key type for KV Store
message Key {
  oneof key {
    // Value for a string key
    string string = 1;
    // Value for a number key
    int number = 2;
  }
}

message KeyValueGetRequest {
  // The collection to retrieve the keyValue from
  string collection = 1;

  // The unique key of the keyValue to retrieve
  map<string, Key> key = 2;
}

message KeyValueGetResponse {
  // The retrieved value
  google.protobuf.Struct value = 1;
}

message KeyValuePutRequest {
  // The collection containing the existing keyValue to be inserted or updated.
  string collection = 1;

  // The unique key of the keyValue to put
  map<string, Key> key = 2;

  // A simple JSON object
  google.protobuf.Struct value = 3;
}

message KeyValuePutResponse {}

message KeyValueDeleteRequest {
  // The collection containing the existing keyValue to be deleted
  string collection = 1;

  // The unique key of the keyValue to delete
  map<string, Key> key = 2;
}

message KeyValueDeleteResponse {}

message KeyValueQueryRequest {
  message Expression {
    // The query operand or attribute
    string operand = 1;

    // The query operator [ = | < | <= | > | >= | startsWith ]
    string operator = 2;

    // The query expression value
    string value = 3;
  }

  // The query from collection
  string collection = 1;

  // The query expressions
  repeated Expression expressions = 2;

  // The query fetch limit
  int32 limit = 3;

  // The query paging continuation token
  map<string, Key> pagingToken = 4;
}

message KeyValueQueryResponse {
  // The retrieved values
  repeated google.protobuf.Struct values = 1;

  // The query paging continuation token, when not null further results are available
  map<string, Key> pagingToken = 2;
}