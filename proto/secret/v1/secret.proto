syntax = "proto3";
package nitric.secret.v1;

//protoc plugin options for code generation
option go_package = "nitric/v1;v1";
option java_package = "io.nitric.proto.secret.v1";
option java_multiple_files = true;
option java_outer_classname = "Secrets";
option php_namespace = "Nitric\\Proto\\Secret\\V1";
option csharp_namespace = "Nitric.Proto.Secret.v1";

// The Nitric Secret Service contract
service Secret {
  //Updates a secret, creating a new one if it doesn't already exist
  rpc Put (SecretPutRequest) returns (SecretPutResponse);
  //Gets a secret from a Secret Store
  rpc Get (SecretGetRequest) returns (SecretGetResponse);
}

// Request to put a secret to a Secret Store
message SecretPutRequest {
  //The Secret to put to the Secret store
  NitricSecret secret = 1;
}

// Result from putting the secret to a Secret Store
message SecretPutResponse {
  //AWS returns ARN, name and VersionID
  //GCP returns 
  //Azure returns nothing

  //The id of the secret
  string id = 1;
  //The id of the secret version
  string versionId = 2;
}

// Request to get a secret from a Secret Store
message SecretGetRequest {
  //AWS requires ARN or name and version ID and version stage
  //GCP requires ID and VersionID and projectID
  //Azure requires Name and Version and Key Vault Name

  //The id of the secret
  string id = 1;
  //The id of the secret version
  string versionId = 2;
}

// The secret response
message SecretGetResponse {
  //The secret returned from a Secret Store
  NitricSecret secret = 1;
}

// A secret to be sent or received from a Secret Store
message NitricSecret {
  string name = 1;
  bytes value = 2; //AWS: Byte[] or string (string is turned to b64)
  map<string, string> labels = 3;//Tags for GCP and azure, 
}