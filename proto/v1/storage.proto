syntax = "proto3";
package nitric.v1.storage;

// protoc plugin options for code generation
option go_package = "nitric/v1;v1";
option java_package = "io.nitric.v1.storage";
option java_multiple_files = true;
option java_outer_classname = "NitricStorage";

// Services for storage and retrieval of files in the form of byte arrays, such as text and binary files.
service Storage {
  // Store an item to a bucket
  rpc Put (StoragePutRequest) returns (StoragePutReply);
  // Retrieve an item from a bucket
  rpc Get (StorageGetRequest) returns (StorageGetReply);
  // Delete an item from a bucket
  rpc Delete (StorageDeleteRequest) returns (StorageDeleteReply);
}

// Request to put (create/update) a storage item
message StoragePutRequest {
  // Nitric name of the bucket to store in
  //  this will be automatically resolved to the provider specific bucket identifier.
  string bucketName = 1;
  // Key to store the item under
  string key = 2;
  // bytes array to store
  bytes body = 3;
}

// Result of putting a storage item
message StoragePutReply {
  bool success = 1;
}

// Request to retrieve a storage item
message StorageGetRequest {
  // Nitric name of the bucket to retrieve from
  //  this will be automatically resolved to the provider specific bucket identifier.
  string bucketName = 1;
  // Key of item to retrieve
  string key = 2;
}

// Returned storage item
message StorageGetReply {
  // The body bytes of the retrieved storage item
  bytes body = 1;
}

// Request to delete a storage item
message StorageDeleteRequest {
  // Name of the bucket to delete from
  string bucketName = 1;
  // Key of item to delete
  string key = 2;
}

// Result of deleting a storage item
message StorageDeleteReply {}